{"swagger":"2.0","info":{"version":"v1","title":"Galaxy Connect™ API","description":"Galaxy Connect™ is a cloud-based API solution that seamlessly integrates ticket suppliers and distributors to make selling more tickets to attractions around the world easier, while eliminating paper vouchers. The result is more sales opportunities and better guest experiences. Please visit http://www.galaxyconnect.com for more information.<br><br>v1.0.7.40 on 5/22/2017 6:09:01 PM [S:02]"},"host":"test-api.galaxyconnect.com","schemes":["https"],"paths":{"/api/bookings":{"get":{"tags":["Bookings"],"summary":"Returns a list of Bookings","description":"Returns all of the Bookings that have been created using your Distributor API Key.\r\n### Usage ###\r\nThe default 50 (max) Bookings will be returned for each page, increment the Page parameter for additional records. For convenience links to previous and next pages are provided.","operationId":"Bookings_GetBystartDateendDatestatussupplierIdpagepageSize","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"startDate","in":"query","required":false,"type":"string","format":"date-time"},{"name":"endDate","in":"query","required":false,"type":"string","format":"date-time"},{"name":"status","in":"query","required":false,"type":"integer","format":"int32"},{"name":"supplierId","in":"query","required":false,"type":"string"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingsResponse"}},"500":{"description":"Supplier not found","schema":{"$ref":"#/definitions/ApiError"}},"606":{"description":"Invalid booking status","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false},"post":{"tags":["Bookings"],"summary":"Creates a Booking","description":"### Creating Bookings ###\r\nA Booking is a container that holds Product and Guest information in Galaxy Connect.\r\nDistributors create Bookings in Galaxy Connect using the Product and Guest information that is accumulated during the customer’s shopping/purchasing experience.\r\nThe following will explain the process for creating Bookings in Galaxy Connect using sequential calls to create, append to, modify, and complete a Booking.\r\nThroughout the process, the Galaxy Connect platform may communicate with the Supplier system as needed, based on the nature of the calls that a Distributor makes and the Products that they sell.\r\nThe Distributor system remains unaware of external calls made by Galaxy Connect to the various Supplier systems, serving as an abstraction layer to foster a consistent interface across the various Suppliers for which they sell products.\r\n### Create a Booking using sequential calls ####\r\nUsing sequential calls to the API, the Distributor may create an empty Booking in Galaxy Connect, then add Booking Items and Guests as the customer adds lines items and guest information to the Distributor’s shopping cart. When the Booking is complete, the Distributor invokes the “Checkout” resource, which triggers Galaxy Connect to deliver the Booking to the Supplier system.  The Supplier system then creates an Order using the Booking’s Product and Guest information.  The Supplier system returns the generated Order information to Galaxy Connect, which in turn makes available to the Distributor via the Booking in the response.\r\n### Usage ###\r\nCreates a new Booking. If the optional request body parameter is included, the Booking will contain all of the Product and Guest data specified in the request message.\r\nIf the request body is empty or omitted, Galaxy Connect will generate a new empty Booking for the caller to subsequently add Products and Guests to.\r\nEither way, a new BookingId will be generated and returned in the response.","operationId":"Bookings_PostByrequest","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"request","in":"body","description":"Booking Details","required":true,"schema":{"$ref":"#/definitions/CreateBookingRequest"}}],"responses":{"200":{"description":"Unable to retrieve product # for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"201":{"description":"No related products for product # for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"203":{"description":"Product # for distributor # does not support managed capacity","schema":{"$ref":"#/definitions/ApiError"}},"612":{"description":"Cannot add a guest designated as lead guest since one already exists in booking # for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"613":{"description":"The request to add items to booking # for distributor # contains multiple items with a lead guest designated","schema":{"$ref":"#/definitions/ApiError"}},"615":{"description":"There are no items to order in booking # for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"616":{"description":"The number of guests # associated with booking item # does not match the quantity # in booking # for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"622":{"description":"An event id must be supplied to add product # for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"623":{"description":"An invalid order id was sent in request to create a booking for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"651":{"description":"Unable to retrieve supplier booking in booking # for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{bookingId}/guests":{"get":{"tags":["Bookings"],"summary":"Returns a list of Guests from a Booking","description":"Returns a list of Guests from a particular Booking by Booking Id.","operationId":"BookingGuests_GetBybookingId","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingGuestsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false},"post":{"tags":["Bookings"],"summary":"Adds Guests to a Booking","description":"Adds one or more Guests to a Booking.\r\nA Guest is a customer that is associated with a Booking.\r\nA Booking may have multiple Guests but it must have ***one and only one*** \"Lead Guest\".\r\nThe \"Lead Guest\" is typically the lead traveler, or the primary point of contact for the Booking.\r\n\r\nWhen adding Guests to an Order, each Guest will be assigned with an \"id\" identifier in the response.\r\nThis value may be used to associate the Guest to one or more Booking Items.","operationId":"BookingGuests_PostBybookingIdrequest","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"request","in":"body","description":"Collection of Guests to add to the Booking","required":true,"schema":{"$ref":"#/definitions/BookingGuestsRequest"},"default":"{\r\n  \"guests\": [\r\n    {\r\n      \"title\": \"Mr\",\r\n      \"firstName\": \"John\",\r\n      \"lastName\": \"Doe\",\r\n      \"suffix\": \"III\",\r\n      \"isLead\": true,\r\n      \"address\": {\r\n        \"line1\": \"123 Main St\",\r\n        \"city\": \"New City\",\r\n      },\r\n      \"email\": \"jdoe@galaxyconnect.com\",\r\n      \"phone\": \"610-555-1212\"\r\n    }\r\n  ]\r\n}"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingGuestsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false},"delete":{"tags":["Bookings"],"summary":"Deletes all Guests from a Booking","description":"Deletes all Guests from a particular Booking by Booking Id.","operationId":"BookingGuests_DeleteBybookingId","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingGuestsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{bookingId}/guests/{id}":{"get":{"tags":["Bookings"],"summary":"Returns a Guest from a Booking","description":"Returns Guest details from a particular Booking.","operationId":"BookingGuests_GetBybookingIdid","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"id","in":"path","description":"Guest Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingGuestResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"610":{"description":"Booking guest # not found in booking #","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false},"delete":{"tags":["Bookings"],"summary":"Deletes a Guest from a Booking","description":"Deletes a Guest from a particular Booking using a Booking Id and a Guest Id.","operationId":"BookingGuests_DeleteBybookingIdid","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"id","in":"path","description":"Guest Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingGuestsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{bookingId}/items":{"get":{"tags":["Bookings"],"summary":"Returns a list of Booking Items","description":"Returns a list of all Booking Items for a Booking.","operationId":"BookingItems_GetBybookingId","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingItemsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false},"post":{"tags":["Bookings"],"summary":"Adds a Booking Item","description":"Adds one or more Booking Item to a Booking. \r\nA Booking Item represents a Product that a customer adds to a Distributor’s shopping cart, order, reservation system, etc.\r\nFor Capacity Managed Products, the request message must include the unique Id of the Event that the customer chose when adding the Product to their Booking.\r\nThis will place a temporary hold on the capacity that was specified based on the quantity of the Product.\r\nThis will ensure that the inventory cannot be sold between the time the Booking Item is added to the Booking and the time that the Booking is completed and sent to the Supplier.\r\n\r\nNote: The amount of time in which inventory is held is determined by the Supplier, and the Supplier may configure different time intervals for different Distributors. The Galaxy Connect Services Team will communicate with both the Distributor and the Supplier to ensure that both parties are in agreement of this value.","operationId":"BookingItems_PostBybookingIdrequest","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"request","in":"body","description":"Collection of Items to add to the given Booking","required":true,"schema":{"$ref":"#/definitions/AddBookingItems"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingItemsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"625":{"description":"Invalid Booking Item quantity","schema":{"$ref":"#/definitions/ApiError"}},"626":{"description":"Booking Item quantity must equal provided Ticket Numbers","schema":{"$ref":"#/definitions/ApiError"}},"627":{"description":"Ticket Numbers provided in Booking Items must be unique","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false},"delete":{"tags":["Bookings"],"summary":"Deletes all Booking Items","description":"Deletes all Booking Items from a particular Booking.","operationId":"BookingItems_DeleteBybookingId","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingItemsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{bookingId}/items/{id}":{"get":{"tags":["Bookings"],"summary":"Returns a Booking Item","description":"All information for the Booking Item is returned, both the Booking Id and the Booking Item Id are required.","operationId":"BookingItems_GetBybookingIdid","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"id","in":"path","description":"Booking Item Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingItemResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"620":{"description":"Booking item # not found in booking #","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false},"delete":{"tags":["Bookings"],"summary":"Deletes a Booking Item","description":"Deletes a defined Booking Item from a particular Booking.","operationId":"BookingItems_DeleteBybookingIdid","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"id","in":"path","description":"Item Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingItemsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{bookingId}/items/{id}/guests":{"get":{"tags":["Bookings"],"summary":"Returns a list of Guests associated to a Booking Item","description":"Returns all Guest detail for all Guests releated to a particular Booking Item.","operationId":"BookingItems_GetGuestsBybookingIdid","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"id","in":"path","description":"Item Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingItemGuestsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"620":{"description":"Booking item # not found in booking #","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false},"post":{"tags":["Bookings"],"summary":"Adds a Guest to a Booking Item","description":"In addition to being associated to a Booking, a Guest can also be associated to a particular Booking Item within the Booking. To accomplish this, a Distributor may either:\r\n1. Provide the Guest Id of an existing Booking Guest.\r\n2. Create a new Guest by omitting the \"id\" and providing valid Guest data.","operationId":"BookingItems_PostBybookingIdidrequest","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"id","in":"path","description":"Item Id","required":true,"type":"string"},{"name":"request","in":"body","description":"Guest(s) details","required":true,"schema":{"$ref":"#/definitions/BookingItemGuestsRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingItemGuestsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"620":{"description":"Booking item # not found in booking #","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{bookingId}/items/{itemId}/guests":{"delete":{"tags":["Bookings"],"summary":"Deletes Guests associated to a Booking Item","description":"Deletes all Guests from a particular Booking Item.","operationId":"BookingItems_DeleteGuestsBybookingIditemId","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"itemId","in":"path","description":"Item Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingItemGuestsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"620":{"description":"Booking item # not found in booking #","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{bookingId}/items/{itemId}/guests/{id}":{"delete":{"tags":["Bookings"],"summary":"Deletes a Guest associated to a Booking Item","description":"Deletes a defined Guest from a particular Booking Item.","operationId":"BookingItems_DeleteGuestBybookingIditemIdid","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"bookingId","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"itemId","in":"path","description":"Item Id","required":true,"type":"string"},{"name":"id","in":"path","description":"Guest Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/BookingItemGuestsResponse"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"620":{"description":"Booking item # not found in booking #","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{id}":{"get":{"tags":["Bookings"],"summary":"Returns a single Booking","description":"Returns a single Booking based on the Booking Id.","operationId":"Bookings_GetByid","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"Booking Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Booking"}},"600":{"description":"Booking not found","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{id}/cancel":{"post":{"tags":["Bookings"],"summary":"Cancels a Booking","description":"Cancels an ordered Booking with a reason (500 characters max).","operationId":"Bookings_PostByidrequest","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"request","in":"body","description":"Apply a reason to the cancellation (optional)","required":false,"schema":{"$ref":"#/definitions/CancelBooking"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Booking"}},"671":{"description":"Unable to cancel booking # An error occurred with the supplier #","schema":{"$ref":"#/definitions/ApiError"}},"680":{"description":"Unable to cancel booking # for supplier #. This booking cannot be cancelled because it contains tickets that have already been issued.","schema":{"$ref":"#/definitions/ApiError"}},"683":{"description":"Unable to cancel booking # for supplier #. This booking cannot be cancelled because it contains tickets that have already been used.","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{id}/checkout":{"post":{"tags":["Bookings"],"summary":"Checkout a Booking","description":"Sends the Booking to the Supplier.\r\nIn order to finalize a Booking and trigger Galaxy Connect to send it to the Supplier to create an Order, the Distributor will make a call to the checkout resource.\r\nIn the request, the Distributor must specify an “orderId” in the request message.\r\nThe Order Id represents the Distributor systems internal unique reference to the customer’s Booking.\r\nThis is typically a Reservation Number, Confirmation Number, Transaction Number, or whatever the Distributor’s native reference is to the Booking.\r\nThis should NOT be set to the Booking Id that was generated by Galaxy Connect when the Booking was first created. \r\n\r\nWhen Galaxy Connect successfully delivers the Booking to the Supplier, the Supplier system(Point of Sale, Reservation System, etc.) will create a local order using all of the Product, Event and Guest information provided in the Booking.\r\nThe Supplier will return fulfillment information back to Galaxy Connect, which will in turn add it to the Booking and provide in the response to the Distributor.\r\nThis information may include ticket barcode data, or other information that the Distributor needs to deliver to the customer as part of fulfilling their customer's Booking.","operationId":"Bookings_PostByidrequest","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"id","in":"path","description":"Booking Id","required":true,"type":"string"},{"name":"request","in":"body","description":"The Distributor’s internal Transaction/Order/Itinerary number for the Supplier to store as an external reference to the Order (optional)","required":false,"schema":{"$ref":"#/definitions/CheckoutBooking"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Booking"}},"670":{"description":"Unable to checkout booking #: Invalid order response from supplier #","schema":{"$ref":"#/definitions/ApiError"}},"681":{"description":"Unable to checkout booking # for Supplier #: A booking with OrderID: # already exists for your distributor at this supplier and may not be created again.","schema":{"$ref":"#/definitions/ApiError"}},"682":{"description":"Unable to checkout booking # for Supplier #: This booking contains Events that have already occurred. Event Id: #, Event Start Date: #","schema":{"$ref":"#/definitions/ApiError"}},"684":{"description":"Unable to checkout booking # for Supplier #: Price mismatch detected.","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/bookings/{orderId}":{"get":{"tags":["Bookings"],"summary":"Returns a Booking based on the Order Id","description":"Returns the Booking for the given Distributor Order Id.","operationId":"Bookings_GetByorderId","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"orderId","in":"path","description":"Order Id","required":true,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Booking"}},"600":{"description":"Invalid order Id","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/products":{"get":{"tags":["Products"],"summary":"Returns a list of Products","description":"Returns a list of Products the Distributor is entitled to.\r\n### Usage ###\r\nBefore creating a Booking or adding an item to an existing Booking, a Distributor may wish to retrieve information about the Products that they are able to sell, as well as the current availability of Capacity Managed Products.\r\nThe Distributor may query the API to return all of the Products that they are eligible to sell for, or all of the Products they are eligible to sell for a given Supplier.\r\nThe Distributor Products resource can be used to execute both of these tasks.","operationId":"DistributorProducts_GetBysupplierId","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"supplierId","in":"query","description":"Supplier Id","required":false,"type":"string"}],"responses":{"200":{"description":"Product # was not found for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"205":{"description":"Distributor not authorized for supplier #","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/products/{code}":{"get":{"tags":["Products"],"summary":"Returns a Product","description":"Returns a single Product.\r\n### Usage ###\r\nBefore creating a Booking or adding an item to an existing Booking, a Distributor may wish to retrieve information about the Products that they are able to sell, as well as the current availability of Capacity Managed Products.\r\n\r\nUse the Distributor's Product Code to obtain detailed Product information.","operationId":"DistributorProducts_GetByCodeBycode","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"code","in":"path","description":"Distributor Product Code","required":true,"type":"string"}],"responses":{"200":{"description":"Product # was not found for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"205":{"description":"Distributor not authorized for supplier #","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/products/{code}/availability":{"get":{"tags":["Products"],"summary":"Returns the current Product availability","description":"Returns the current Product availability.\r\n### Retrieving Product Availability ###\r\nWhen the product attribute \"hasManagedCapacity\" is true, it indicates that the product has limited availability associated with it each day.\r\nA Distributor may use the /availability resource to retrieve the current availability for a product for a given date range.\r\nProduct availability is reflected through an object called an Event.\r\nEvents are pre-determined dates and times that define buckets of availability for Capacity Managed Products.\r\nAvailability is queried for a specified date/time range, per the request message made by the Distributor.\r\nThe response message will provide the Events that are available for the Product, along with the current availability of each Event.\r\nEach Event has a unique Event ID identifier field, which the Distributor uses when reserving units of availability for a Product in a Booking.\r\n### Usage ### \r\nOptionally, the query may be filtered to only return Events that currently have enough availability for the given \"quantity\" parameter provided in the query string. \r\nProduct Availability is returned in the format of an Event object, each of which will specify a unique Id.\r\nWhen adding a Capacity Managed Product to a Booking, the Distributor must provide the unique Id of the Event that represents the date/time that the customer chooses when adding the Product to their Booking.","operationId":"DistributorProducts_GetAvailabilityBycodequantitystartDateTimeendDateTime","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"code","in":"path","description":"The Distributor’s Product Code","required":true,"type":"string"},{"name":"quantity","in":"query","description":"The number of units required.","required":false,"type":"integer","format":"int32"},{"name":"startDateTime","in":"query","description":"Start of date/time range to search availability.","required":false,"type":"string","format":"date-time"},{"name":"endDateTime","in":"query","description":"End of date range to search availability.","required":false,"type":"string","format":"date-time"}],"responses":{"200":{"description":"Product # was not found for distributor #","schema":{"$ref":"#/definitions/ApiError"}},"205":{"description":"Distributor not authorized for supplier #","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/suppliers":{"get":{"tags":["Suppliers"],"summary":"Returns a list of Suppliers","description":"Returns all of the Suppliers for which the Distributor may create Bookings.","operationId":"DistributorSuppliers_Get","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/SuppliersResponse"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/tickets/{ticketNumber}/activations":{"post":{"tags":["Tickets"],"summary":"Activates a Ticket","description":"Distributors may use this to Activate a Ticket.","operationId":"TicketActivations_PostByticketNumberrequest","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"ticketNumber","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/TicketActivationRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TicketActivationResponse"}},"700":{"description":"Ticket not found"},"1419":{"description":"This ticket cannot be activated because it has already been deactivated."},"1422":{"description":"This product is not eligible for ticket activation."},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false},"delete":{"tags":["Tickets"],"summary":"Deactivates a Ticket","description":"Distributors may use this to Deactivate a Ticket.","operationId":"TicketActivations_DeleteByticketNumberrequest","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"ticketNumber","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/TicketActivationRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TicketActivationResponse"}},"700":{"description":"Ticket not found","schema":{"$ref":"#/definitions/ApiError"}},"1420":{"description":"This ticket cannot be deactivated because it is not active.","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/tickets/{ticketNumber}/return":{"post":{"tags":["Tickets"],"summary":"Return a Ticket","description":"Distributors may use this to Return an issued Ticket.","operationId":"TicketReturn_PostByticketNumberrequest","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json"],"parameters":[{"name":"ticketNumber","in":"path","required":true,"type":"string"},{"name":"request","in":"body","required":true,"schema":{"$ref":"#/definitions/TicketReturnRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Object"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/tickets/{ticketNumber}/status":{"get":{"tags":["Tickets"],"summary":"Returns the current Ticket status","description":"Distributors may use this to retrive ticket status from a Supplier.","operationId":"TicketStatus_GetByticketNumberproductCode","consumes":[],"produces":["application/json","text/json"],"parameters":[{"name":"ticketNumber","in":"path","description":"Ticket Number","required":true,"type":"string"},{"name":"productCode","in":"query","description":"Product Code","required":true,"type":"string"}],"responses":{"200":{"description":"Product not found","schema":{"$ref":"#/definitions/ApiError"}},"700":{"description":"Ticket not found","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/tickets/{ticketNumber}/usage":{"post":{"tags":["Tickets"],"summary":"Updates usage records for a Ticket","description":"Suppliers may use this to update the usage status for a Ticket.","operationId":"TicketUsage_PostByticketNumberrequest","consumes":["application/json","text/json","application/xml","text/xml","application/x-www-form-urlencoded"],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"ticketNumber","in":"path","description":"Ticket Number","required":true,"type":"string"},{"name":"request","in":"body","description":"Ticket usage details","required":true,"schema":{"$ref":"#/definitions/TicketUsageRequest"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/TicketUsageResponse"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"2":{"description":"Object cannot be null","schema":{"$ref":"#/definitions/ApiError"}},"3":{"description":"Request not valid","schema":{"$ref":"#/definitions/ApiError"}},"4":{"description":"Record version conflict","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}},"/api/usage":{"get":{"tags":["Usage"],"summary":"Returns a list of Usage","description":"Returns all of the Usage that have been created using your Distributor API Key.\r\n### Usage ###\r\nThe default 50 (max) Usage will be returned for each page, increment the Page parameter for additional records. For convenience links to previous and next pages are provided.","operationId":"Usage_GetBystartDateendDatesupplierIdproductCodeticketNumberpagepageSize","consumes":[],"produces":["application/json","text/json","application/xml","text/xml"],"parameters":[{"name":"startDate","in":"query","required":false,"type":"string","format":"date-time"},{"name":"endDate","in":"query","required":false,"type":"string","format":"date-time"},{"name":"supplierId","in":"query","required":false,"type":"string"},{"name":"productCode","in":"query","required":false,"type":"string"},{"name":"ticketNumber","in":"query","required":false,"type":"string"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/DistributorUsageResponse"}},"500":{"description":"Supplier not found","schema":{"$ref":"#/definitions/ApiError"}},"401":{"description":"Authorization had been denied","schema":{"$ref":"#/definitions/ApiError"}},"1":{"description":"Cannot read request","schema":{"$ref":"#/definitions/ApiError"}},"999999":{"description":"Unexpected exception","schema":{"$ref":"#/definitions/ApiError"}}},"deprecated":false}}},"definitions":{"BookingGuestsResponse":{"type":"object","properties":{"bookingId":{"type":"string"},"guests":{"type":"array","items":{"$ref":"#/definitions/Guest"}}}},"Guest":{"type":"object","properties":{"id":{"type":"string"},"title":{"type":"string"},"firstName":{"type":"string"},"middleName":{"type":"string"},"lastName":{"type":"string"},"suffix":{"type":"string"},"isLead":{"type":"boolean"},"address":{"$ref":"#/definitions/Address"},"email":{"type":"string"},"phone":{"type":"string"}}},"Address":{"type":"object","properties":{"line1":{"type":"string"},"line2":{"type":"string"},"line3":{"type":"string"},"city":{"type":"string"},"province":{"type":"string"},"postalCode":{"type":"string"},"country":{"type":"string"}}},"ApiError":{"type":"object","properties":{"httpStatusCode":{"format":"int32","type":"integer"},"errorCode":{"format":"int32","type":"integer"},"message":{"type":"string"},"correlationId":{"type":"string"}}},"BookingGuestsRequest":{"type":"object","properties":{"guests":{"type":"array","items":{"$ref":"#/definitions/Guest"}}}},"BookingGuestResponse":{"type":"object","properties":{"bookingId":{"type":"string"},"guest":{"$ref":"#/definitions/Guest"}}},"BookingItemsResponse":{"type":"object","properties":{"bookingId":{"type":"string"},"items":{"type":"array","items":{"$ref":"#/definitions/BookingItem"}}}},"BookingItem":{"type":"object","properties":{"id":{"type":"string"},"productCode":{"type":"string"},"productName":{"type":"string"},"quantity":{"format":"int32","type":"integer"},"createdAt":{"format":"date-time","type":"string"},"status":{"format":"int32","type":"integer"},"statusText":{"type":"string"},"eventId":{"type":"string"},"guests":{"type":"array","items":{"$ref":"#/definitions/Guest"}},"ticketNumbers":{"type":"array","items":{"type":"string"}},"links":{"type":"array","items":{"$ref":"#/definitions/Link"}}}},"Link":{"type":"object","properties":{"rel":{"type":"string"},"href":{"type":"string"},"method":{"type":"string"},"title":{"type":"string"}}},"AddBookingItems":{"type":"object","properties":{"items":{"type":"array","items":{"$ref":"#/definitions/AddBookingItem"}}}},"AddBookingItem":{"required":["productCode","quantity"],"type":"object","properties":{"productCode":{"type":"string"},"quantity":{"format":"int32","type":"integer"},"eventId":{"type":"string"},"guests":{"type":"array","items":{"$ref":"#/definitions/Guest"}},"ticketNumbers":{"type":"array","items":{"type":"string"}}}},"BookingItemResponse":{"type":"object","properties":{"bookingId":{"type":"string"},"item":{"$ref":"#/definitions/BookingItem"}}},"BookingItemGuestsRequest":{"type":"object","properties":{"guests":{"type":"array","items":{"$ref":"#/definitions/BookingItemGuestItem"}}}},"BookingItemGuestItem":{"required":["id"],"type":"object","properties":{"id":{"type":"string"}}},"BookingItemGuestsResponse":{"type":"object","properties":{"bookingItemId":{"type":"string"},"guests":{"type":"array","items":{"$ref":"#/definitions/Guest"}}}},"BookingsResponse":{"type":"object","properties":{"previousPageLink":{"type":"string"},"nextPageLink":{"type":"string"},"totalCount":{"format":"int32","type":"integer"},"totalPages":{"format":"int32","type":"integer"},"bookings":{"type":"array","items":{"$ref":"#/definitions/Booking"}}}},"Booking":{"type":"object","properties":{"id":{"type":"string"},"distributorId":{"type":"string"},"createdAt":{"format":"date-time","type":"string"},"lastActivity":{"format":"date-time","type":"string"},"status":{"format":"int32","type":"integer"},"statusText":{"type":"string"},"visitDate":{"format":"date-time","type":"string"},"totalQuantity":{"format":"int32","type":"integer"},"subTotal":{"format":"double","type":"number"},"totalTax":{"format":"double","type":"number"},"total":{"format":"double","type":"number"},"order":{"$ref":"#/definitions/Order"},"guests":{"type":"array","items":{"$ref":"#/definitions/Guest"}},"items":{"type":"array","items":{"$ref":"#/definitions/BookingItem"}},"tickets":{"type":"array","items":{"$ref":"#/definitions/Ticket"}},"links":{"type":"array","items":{"$ref":"#/definitions/Link"}}}},"Order":{"type":"object","properties":{"orderId":{"type":"string"},"orderedAt":{"format":"date-time","type":"string"},"cancelledAt":{"format":"date-time","type":"string"},"cancelReason":{"type":"string"},"supplierOrders":{"type":"array","items":{"$ref":"#/definitions/SupplierOrder"}}}},"Ticket":{"type":"object","properties":{"createdAt":{"format":"date-time","type":"string"},"ticketNumber":{"type":"string"},"productCode":{"type":"string"},"productName":{"type":"string"},"eventId":{"type":"string"},"eventName":{"type":"string"},"eventStart":{"format":"date-time","type":"string"},"eventEnd":{"format":"date-time","type":"string"},"guest":{"$ref":"#/definitions/TicketGuest"}}},"SupplierOrder":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"orderId":{"type":"string"}}},"TicketGuest":{"type":"object","properties":{"id":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"}}},"CreateBookingRequest":{"type":"object","properties":{"orderId":{"type":"string"},"visitDate":{"format":"date-time","type":"string"},"guests":{"type":"array","items":{"$ref":"#/definitions/Guest"}},"items":{"type":"array","items":{"$ref":"#/definitions/AddBookingItem"}}}},"CancelBooking":{"type":"object","properties":{"reason":{"type":"string"}}},"CheckoutBooking":{"required":["orderId"],"type":"object","properties":{"orderId":{"type":"string"}}},"ProductsResponse":{"type":"object","properties":{"totalCount":{"format":"int32","type":"integer"},"products":{"type":"array","items":{"$ref":"#/definitions/Product"}}}},"Product":{"type":"object","properties":{"code":{"type":"string"},"description":{"type":"string"},"name":{"type":"string"},"price":{"format":"double","type":"number"},"tax":{"format":"double","type":"number"},"hasManagedCapacity":{"type":"boolean"},"links":{"type":"array","items":{"$ref":"#/definitions/Link"}}}},"ProductAvailability":{"type":"object","properties":{"productCode":{"type":"string"},"events":{"type":"array","items":{"$ref":"#/definitions/Event"}}}},"Event":{"type":"object","properties":{"id":{"type":"string"},"available":{"format":"int32","type":"integer"},"startDateTime":{"format":"date-time","type":"string"},"endDateTime":{"format":"date-time","type":"string"},"status":{"type":"string"},"statusReason":{"type":"string"}}},"SuppliersResponse":{"type":"object","properties":{"totalCount":{"format":"int32","type":"integer"},"suppliers":{"type":"array","items":{"$ref":"#/definitions/Supplier"}}}},"Supplier":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"status":{"format":"int32","type":"integer"},"links":{"type":"array","items":{"$ref":"#/definitions/Link"}}}},"TicketActivationRequest":{"required":["productCode"],"type":"object","properties":{"productCode":{"type":"string"}}},"TicketActivationResponse":{"type":"object","properties":{"ticketNumber":{"type":"string"},"productCode":{"type":"string"},"supplierName":{"type":"string"},"resultCode":{"format":"int32","type":"integer"},"correlationId":{"type":"string"},"errors":{"type":"array","items":{"$ref":"#/definitions/TicketActivationError"}}}},"TicketActivationError":{"type":"object","properties":{"errorCode":{"type":"string"},"errorText":{"type":"string"}}},"TicketReturnRequest":{"required":["productCode"],"type":"object","properties":{"productCode":{"type":"string"},"reason":{"type":"string"}}},"Object":{"type":"object","properties":{}},"TicketStatus":{"type":"object","properties":{"ticketNumber":{"type":"string"},"active":{"type":"boolean"},"productCode":{"type":"string"},"productDescription":{"type":"string"},"usage":{"type":"array","items":{"$ref":"#/definitions/SupplierTicketStatusUsage"}}}},"SupplierTicketStatusUsage":{"type":"object","properties":{"useTime":{"format":"date-time","type":"string"},"supplierName":{"type":"string"}}},"TicketUsageRequest":{"required":["useTime"],"type":"object","properties":{"productCode":{"type":"string"},"quantity":{"format":"int32","type":"integer"},"status":{"format":"int32","type":"integer"},"uses":{"format":"int32","type":"integer"},"useTime":{"format":"date-time","type":"string"}}},"TicketUsageResponse":{"type":"object","properties":{"ticketNumber":{"type":"string"},"productCode":{"type":"string"},"quantity":{"format":"int32","type":"integer"},"status":{"format":"int32","type":"integer"},"statusText":{"type":"string"},"uses":{"format":"int32","type":"integer"},"useTime":{"format":"date-time","type":"string"},"errorCode":{"format":"int32","type":"integer"},"errorMessage":{"type":"string"},"httpStatusCode":{"format":"int32","type":"integer"},"hasError":{"type":"boolean","readOnly":true}}},"DistributorUsageResponse":{"type":"object","properties":{"previousPageLink":{"type":"string"},"nextPageLink":{"type":"string"},"totalCount":{"format":"int32","type":"integer"},"totalPages":{"format":"int32","type":"integer"},"usage":{"type":"array","items":{"$ref":"#/definitions/DistributorTicketUsage"}}}},"DistributorTicketUsage":{"type":"object","properties":{"ticketNumber":{"type":"string"},"useTime":{"format":"date-time","type":"string"},"productCode":{"type":"string"},"supplier":{"$ref":"#/definitions/SupplierTicketUsage"}}},"SupplierTicketUsage":{"type":"object","properties":{"name":{"type":"string"},"productCode":{"type":"string"}}}}}